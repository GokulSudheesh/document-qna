// This file is auto-generated by @hey-api/openapi-ts

import { type Options as ClientOptions, type TDataShape, type Client, formDataBodySerializer } from './client';
import type { ChatApiV1ChatSessionIdPostData, ChatApiV1ChatSessionIdPostResponses, ChatApiV1ChatSessionIdPostErrors, ChatStreamApiV1ChatSseSessionIdPostData, ChatStreamApiV1ChatSseSessionIdPostResponses, ChatStreamApiV1ChatSseSessionIdPostErrors, ChatHistoryApiV1ChatHistorySessionIdGetData, ChatHistoryApiV1ChatHistorySessionIdGetResponses, ChatHistoryApiV1ChatHistorySessionIdGetErrors, FileUploadApiV1FileUploadPostData, FileUploadApiV1FileUploadPostResponses, FileUploadApiV1FileUploadPostErrors, ListFilesApiV1FileListGetData, ListFilesApiV1FileListGetResponses, ListFilesApiV1FileListGetErrors, DeleteFileApiV1FileFileIdDeleteData, DeleteFileApiV1FileFileIdDeleteResponses, DeleteFileApiV1FileFileIdDeleteErrors, CreateSessionApiV1SessionCreatePostData, CreateSessionApiV1SessionCreatePostResponses, ListSessionsApiV1SessionListGetData, ListSessionsApiV1SessionListGetResponses, DeleteSessionApiV1SessionSessionIdDeleteData, DeleteSessionApiV1SessionSessionIdDeleteResponses, DeleteSessionApiV1SessionSessionIdDeleteErrors, GetSessionByIdApiV1SessionSessionIdGetData, GetSessionByIdApiV1SessionSessionIdGetResponses, GetSessionByIdApiV1SessionSessionIdGetErrors } from './types.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

/**
 * Chat
 */
export const chatApiV1ChatSessionIdPost = <ThrowOnError extends boolean = false>(options: Options<ChatApiV1ChatSessionIdPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<ChatApiV1ChatSessionIdPostResponses, ChatApiV1ChatSessionIdPostErrors, ThrowOnError>({
        url: '/api/v1/chat/{session_id}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Chat Stream
 */
export const chatStreamApiV1ChatSseSessionIdPost = <ThrowOnError extends boolean = false>(options: Options<ChatStreamApiV1ChatSseSessionIdPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<ChatStreamApiV1ChatSseSessionIdPostResponses, ChatStreamApiV1ChatSseSessionIdPostErrors, ThrowOnError>({
        url: '/api/v1/chat/sse/{session_id}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Chat History
 */
export const chatHistoryApiV1ChatHistorySessionIdGet = <ThrowOnError extends boolean = false>(options: Options<ChatHistoryApiV1ChatHistorySessionIdGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<ChatHistoryApiV1ChatHistorySessionIdGetResponses, ChatHistoryApiV1ChatHistorySessionIdGetErrors, ThrowOnError>({
        url: '/api/v1/chat/history/{session_id}',
        ...options
    });
};

/**
 * File Upload
 */
export const fileUploadApiV1FileUploadPost = <ThrowOnError extends boolean = false>(options: Options<FileUploadApiV1FileUploadPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<FileUploadApiV1FileUploadPostResponses, FileUploadApiV1FileUploadPostErrors, ThrowOnError>({
        ...formDataBodySerializer,
        url: '/api/v1/file/upload',
        ...options,
        headers: {
            'Content-Type': null,
            ...options.headers
        }
    });
};

/**
 * List Files
 */
export const listFilesApiV1FileListGet = <ThrowOnError extends boolean = false>(options: Options<ListFilesApiV1FileListGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<ListFilesApiV1FileListGetResponses, ListFilesApiV1FileListGetErrors, ThrowOnError>({
        url: '/api/v1/file/list',
        ...options
    });
};

/**
 * Delete File
 */
export const deleteFileApiV1FileFileIdDelete = <ThrowOnError extends boolean = false>(options: Options<DeleteFileApiV1FileFileIdDeleteData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteFileApiV1FileFileIdDeleteResponses, DeleteFileApiV1FileFileIdDeleteErrors, ThrowOnError>({
        url: '/api/v1/file/{file_id}',
        ...options
    });
};

/**
 * Create Session
 * Endpoint to create a new session.
 */
export const createSessionApiV1SessionCreatePost = <ThrowOnError extends boolean = false>(options?: Options<CreateSessionApiV1SessionCreatePostData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<CreateSessionApiV1SessionCreatePostResponses, unknown, ThrowOnError>({
        url: '/api/v1/session/create',
        ...options
    });
};

/**
 * List Sessions
 * Endpoint to list all active sessions.
 */
export const listSessionsApiV1SessionListGet = <ThrowOnError extends boolean = false>(options?: Options<ListSessionsApiV1SessionListGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<ListSessionsApiV1SessionListGetResponses, unknown, ThrowOnError>({
        url: '/api/v1/session/list',
        ...options
    });
};

/**
 * Delete Session
 * Endpoint to delete a specific session by its ID.
 */
export const deleteSessionApiV1SessionSessionIdDelete = <ThrowOnError extends boolean = false>(options: Options<DeleteSessionApiV1SessionSessionIdDeleteData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteSessionApiV1SessionSessionIdDeleteResponses, DeleteSessionApiV1SessionSessionIdDeleteErrors, ThrowOnError>({
        url: '/api/v1/session/{session_id}',
        ...options
    });
};

/**
 * Get Session By Id
 * Endpoint to get a specific session by its ID.
 */
export const getSessionByIdApiV1SessionSessionIdGet = <ThrowOnError extends boolean = false>(options: Options<GetSessionByIdApiV1SessionSessionIdGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSessionByIdApiV1SessionSessionIdGetResponses, GetSessionByIdApiV1SessionSessionIdGetErrors, ThrowOnError>({
        url: '/api/v1/session/{session_id}',
        ...options
    });
};