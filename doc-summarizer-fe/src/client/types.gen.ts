// This file is auto-generated by @hey-api/openapi-ts

/**
 * Body_file_upload_api_v1_file_upload_post
 */
export type BodyFileUploadApiV1FileUploadPost = {
    /**
     * Files
     */
    files: Array<Blob | File>;
};

/**
 * ChatFileReference
 */
export type ChatFileReference = {
    /**
     * Id
     */
    id: string;
    /**
     * File Name
     */
    file_name: string;
};

/**
 * ChatHistoryItem
 */
export type ChatHistoryItem = {
    /**
     * Id
     */
    id: string;
    /**
     * Created
     */
    created: string;
    /**
     * Session Id
     */
    session_id: string;
    role: MessageRole;
    /**
     * Message
     */
    message: string;
    /**
     * References
     */
    references: Array<ChatFileReference> | null;
};

/**
 * ChatHistoryResponse
 */
export type ChatHistoryResponse = {
    /**
     * Success
     */
    success?: boolean;
    /**
     * Data
     */
    data: Array<ChatHistoryItem>;
};

/**
 * ChatRequestBody
 */
export type ChatRequestBody = {
    /**
     * Query
     */
    query: string;
};

/**
 * ChatResponse
 */
export type ChatResponse = {
    /**
     * Success
     */
    success?: boolean;
    data: CompletionResponseWithReferences;
};

/**
 * CompletionResponseWithReferences
 */
export type CompletionResponseWithReferences = {
    /**
     * Content
     */
    content: string;
    usage_metadata?: UsageMetadata | null;
    /**
     * References
     */
    references?: Array<Reference> | null;
};

/**
 * CreateSessionResponse
 */
export type CreateSessionResponse = {
    /**
     * Success
     */
    success?: boolean;
    data: Session;
};

/**
 * DeleteByID
 */
export type DeleteById = {
    /**
     * Id
     */
    id: string;
    /**
     * Message
     */
    message: string;
};

/**
 * DeleteByIDResponse
 */
export type DeleteByIdResponse = {
    /**
     * Success
     */
    success?: boolean;
    data: DeleteById;
};

/**
 * ExtractedFile
 */
export type ExtractedFile = {
    /**
     * Id
     */
    id: string;
    /**
     * File Name
     */
    file_name: string;
    file_type: FileType;
    /**
     * File Size
     */
    file_size?: number | null;
};

/**
 * ExtractedFileResponse
 */
export type ExtractedFileResponse = {
    /**
     * Id
     */
    id: string;
    /**
     * File Name
     */
    file_name: string;
    file_type: FileType;
    /**
     * File Size
     */
    file_size?: number | null;
    /**
     * Created
     */
    created: string;
};

/**
 * FileExtractionResponse
 */
export type FileExtractionResponse = {
    /**
     * Session Id
     */
    session_id: string;
    /**
     * Files
     */
    files: Array<ExtractedFile>;
};

/**
 * FileType
 */
export type FileType = 'text/plain' | 'application/pdf' | 'application/msword' | 'application/vnd.openxmlformats-officedocument.wordprocessingml.document';

/**
 * FileUploadResponse
 */
export type FileUploadResponse = {
    /**
     * Success
     */
    success?: boolean;
    data: FileExtractionResponse;
};

/**
 * GetFileResponse
 */
export type GetFileResponse = {
    /**
     * Id
     */
    id: string;
    /**
     * File Name
     */
    file_name: string;
    file_type: FileType;
    /**
     * File Size
     */
    file_size?: number | null;
    /**
     * Created
     */
    created: string;
    /**
     * Session Id
     */
    session_id: string;
};

/**
 * GetFilesResponse
 */
export type GetFilesResponse = {
    /**
     * Success
     */
    success?: boolean;
    /**
     * Data
     */
    data: Array<GetFileResponse>;
};

/**
 * GetSessionByID
 */
export type GetSessionById = {
    /**
     * Id
     */
    id: string;
    /**
     * Session Name
     */
    session_name: string;
    /**
     * Created
     */
    created: string;
    /**
     * Files
     */
    files: Array<ExtractedFileResponse>;
};

/**
 * GetSessionByIDResponse
 */
export type GetSessionByIdResponse = {
    /**
     * Success
     */
    success?: boolean;
    data: GetSessionById;
};

/**
 * GetSessionsResponse
 */
export type GetSessionsResponse = {
    /**
     * Success
     */
    success?: boolean;
    /**
     * Data
     */
    data: Array<Session>;
};

/**
 * HTTPValidationError
 */
export type HttpValidationError = {
    /**
     * Detail
     */
    detail?: Array<ValidationError>;
};

/**
 * MessageRole
 */
export type MessageRole = 'user' | 'assistant';

/**
 * Reference
 */
export type Reference = {
    /**
     * File Name
     */
    file_name: string;
    /**
     * File Id
     */
    file_id: string;
};

/**
 * Session
 */
export type Session = {
    /**
     * Created
     */
    created?: string;
    /**
     * Session Name
     */
    session_name?: string;
    /**
     * Files
     */
    files?: Array<string>;
    /**
     * Id
     */
    id?: string;
};

/**
 * UsageMetadata
 */
export type UsageMetadata = {
    /**
     * Input Tokens
     */
    input_tokens: number;
    /**
     * Output Tokens
     */
    output_tokens: number;
    /**
     * Total Tokens
     */
    total_tokens: number;
};

/**
 * ValidationError
 */
export type ValidationError = {
    /**
     * Location
     */
    loc: Array<string | number>;
    /**
     * Message
     */
    msg: string;
    /**
     * Error Type
     */
    type: string;
};

export type ChatApiV1ChatSessionIdPostData = {
    body: ChatRequestBody;
    path: {
        /**
         * Session Id
         */
        session_id: string | null;
    };
    query?: never;
    url: '/api/v1/chat/{session_id}';
};

export type ChatApiV1ChatSessionIdPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ChatApiV1ChatSessionIdPostError = ChatApiV1ChatSessionIdPostErrors[keyof ChatApiV1ChatSessionIdPostErrors];

export type ChatApiV1ChatSessionIdPostResponses = {
    /**
     * Successful Response
     */
    200: ChatResponse;
};

export type ChatApiV1ChatSessionIdPostResponse = ChatApiV1ChatSessionIdPostResponses[keyof ChatApiV1ChatSessionIdPostResponses];

export type ChatStreamApiV1ChatSseSessionIdPostData = {
    body: ChatRequestBody;
    path: {
        /**
         * Session Id
         */
        session_id: string | null;
    };
    query?: never;
    url: '/api/v1/chat/sse/{session_id}';
};

export type ChatStreamApiV1ChatSseSessionIdPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ChatStreamApiV1ChatSseSessionIdPostError = ChatStreamApiV1ChatSseSessionIdPostErrors[keyof ChatStreamApiV1ChatSseSessionIdPostErrors];

export type ChatStreamApiV1ChatSseSessionIdPostResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type ChatHistoryApiV1ChatHistorySessionIdGetData = {
    body?: never;
    path: {
        /**
         * Session Id
         */
        session_id: string | null;
    };
    query?: never;
    url: '/api/v1/chat/history/{session_id}';
};

export type ChatHistoryApiV1ChatHistorySessionIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ChatHistoryApiV1ChatHistorySessionIdGetError = ChatHistoryApiV1ChatHistorySessionIdGetErrors[keyof ChatHistoryApiV1ChatHistorySessionIdGetErrors];

export type ChatHistoryApiV1ChatHistorySessionIdGetResponses = {
    /**
     * Successful Response
     */
    200: ChatHistoryResponse;
};

export type ChatHistoryApiV1ChatHistorySessionIdGetResponse = ChatHistoryApiV1ChatHistorySessionIdGetResponses[keyof ChatHistoryApiV1ChatHistorySessionIdGetResponses];

export type FileUploadApiV1FileUploadPostData = {
    body: BodyFileUploadApiV1FileUploadPost;
    path?: never;
    query?: {
        /**
         * Session Id
         */
        session_id?: string | null;
    };
    url: '/api/v1/file/upload';
};

export type FileUploadApiV1FileUploadPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type FileUploadApiV1FileUploadPostError = FileUploadApiV1FileUploadPostErrors[keyof FileUploadApiV1FileUploadPostErrors];

export type FileUploadApiV1FileUploadPostResponses = {
    /**
     * Successful Response
     */
    200: FileUploadResponse;
};

export type FileUploadApiV1FileUploadPostResponse = FileUploadApiV1FileUploadPostResponses[keyof FileUploadApiV1FileUploadPostResponses];

export type ListFilesApiV1FileListGetData = {
    body?: never;
    path?: never;
    query: {
        /**
         * Session Id
         */
        session_id: string | null;
    };
    url: '/api/v1/file/list';
};

export type ListFilesApiV1FileListGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ListFilesApiV1FileListGetError = ListFilesApiV1FileListGetErrors[keyof ListFilesApiV1FileListGetErrors];

export type ListFilesApiV1FileListGetResponses = {
    /**
     * Successful Response
     */
    200: GetFilesResponse;
};

export type ListFilesApiV1FileListGetResponse = ListFilesApiV1FileListGetResponses[keyof ListFilesApiV1FileListGetResponses];

export type DeleteFileApiV1FileFileIdDeleteData = {
    body?: never;
    path: {
        /**
         * File Id
         */
        file_id: string;
    };
    query?: never;
    url: '/api/v1/file/{file_id}';
};

export type DeleteFileApiV1FileFileIdDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteFileApiV1FileFileIdDeleteError = DeleteFileApiV1FileFileIdDeleteErrors[keyof DeleteFileApiV1FileFileIdDeleteErrors];

export type DeleteFileApiV1FileFileIdDeleteResponses = {
    /**
     * Successful Response
     */
    200: DeleteByIdResponse;
};

export type DeleteFileApiV1FileFileIdDeleteResponse = DeleteFileApiV1FileFileIdDeleteResponses[keyof DeleteFileApiV1FileFileIdDeleteResponses];

export type CreateSessionApiV1SessionCreatePostData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/v1/session/create';
};

export type CreateSessionApiV1SessionCreatePostResponses = {
    /**
     * Successful Response
     */
    200: CreateSessionResponse;
};

export type CreateSessionApiV1SessionCreatePostResponse = CreateSessionApiV1SessionCreatePostResponses[keyof CreateSessionApiV1SessionCreatePostResponses];

export type ListSessionsApiV1SessionListGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/v1/session/list';
};

export type ListSessionsApiV1SessionListGetResponses = {
    /**
     * Successful Response
     */
    200: GetSessionsResponse;
};

export type ListSessionsApiV1SessionListGetResponse = ListSessionsApiV1SessionListGetResponses[keyof ListSessionsApiV1SessionListGetResponses];

export type DeleteSessionApiV1SessionSessionIdDeleteData = {
    body?: never;
    path: {
        /**
         * Session Id
         */
        session_id: string | null;
    };
    query?: never;
    url: '/api/v1/session/{session_id}';
};

export type DeleteSessionApiV1SessionSessionIdDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteSessionApiV1SessionSessionIdDeleteError = DeleteSessionApiV1SessionSessionIdDeleteErrors[keyof DeleteSessionApiV1SessionSessionIdDeleteErrors];

export type DeleteSessionApiV1SessionSessionIdDeleteResponses = {
    /**
     * Successful Response
     */
    200: DeleteByIdResponse;
};

export type DeleteSessionApiV1SessionSessionIdDeleteResponse = DeleteSessionApiV1SessionSessionIdDeleteResponses[keyof DeleteSessionApiV1SessionSessionIdDeleteResponses];

export type GetSessionByIdApiV1SessionSessionIdGetData = {
    body?: never;
    path: {
        /**
         * Session Id
         */
        session_id: string;
    };
    query?: never;
    url: '/api/v1/session/{session_id}';
};

export type GetSessionByIdApiV1SessionSessionIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetSessionByIdApiV1SessionSessionIdGetError = GetSessionByIdApiV1SessionSessionIdGetErrors[keyof GetSessionByIdApiV1SessionSessionIdGetErrors];

export type GetSessionByIdApiV1SessionSessionIdGetResponses = {
    /**
     * Successful Response
     */
    200: GetSessionByIdResponse;
};

export type GetSessionByIdApiV1SessionSessionIdGetResponse = GetSessionByIdApiV1SessionSessionIdGetResponses[keyof GetSessionByIdApiV1SessionSessionIdGetResponses];

export type ClientOptions = {
    baseUrl: 'http://localhost:8000' | (string & {});
};